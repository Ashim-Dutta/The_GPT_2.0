import React, { Fragment, useEffect } from 'react'
import { appConst } from '../../../constants/texts';
import { faXmark } from '@fortawesome/free-solid-svg-icons';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; 
import { Button } from '../../../elements';
import Webcam from 'react-webcam';
import UseFaceDetection from '../../../utils/customHooks/useFaceDetection';
import './VideoMode.css'
const VideoMode = (props) => {
    const {
        _handleClick = () => { },
        capture = ()=>{}
      } = { ...props };   

      const { webcamRef, boundingBox, detected } = UseFaceDetection(); 
      
     useEffect(() => {
        
     
       return () => {
           
       }
     }, [])
     

    return (
        <Fragment>
          <Fragment>
              {/* camera */}
              <FontAwesomeIcon
                size="2xl" 
                icon={faXmark} 
                className='close' 
                style={{ color: "#ffffff", }} 
                onClick={_handleClick}
              /> 
              {boundingBox.map((box, index) => (
              <div
                key={`${index + 1}`}
                style={{
                  border: '4px solid red',
                  position: 'absolute',
                  top: `${box.yCenter * 35}%`,
                  left: `${box.xCenter * 100}%`,
                  width: `${box.width * 100}%`,
                  height: `${box.height * 100}%`,
                  width:'40%',
                  overflow: 'hidden',
                  // zIndex: 1,
                }}
              />
            ))}
              <Webcam
                height={400} 
                width={700} 
                ref={webcamRef}
                screenshotFormat={"image/png"}
              />
          </Fragment>
       
          {/* instruction and button */}
          <div className="container"> 
            <p>
              { appConst.position_face}
            </p>
            <Button
              clsname={'capture-button'}
              title={ 'Capture photo'}
              isDisabled={!detected}
              onClick={()=>{
                capture(true,detected,webcamRef) 
             }}
            />
          </div> 
        </Fragment>
      )
}

export default VideoMode