import './KycStatus.css';
import Status from '../status/Status';
import React, { useEffect, useState } from 'react';
import { KycStepOne } from '../kycStepOne';
import { appConst } from '../../constants/texts';
import LetsVerify from '../letsVerify/LetsVerify';
import KycStepTwo from '../kycStepTwo/KycStepTwo';
import { KycStepThree } from '../kycStepThree/index';
import { getKYCStatus,setKYCStep } from '../../redux/actions/Actions';
import { useDispatch, useSelector } from 'react-redux';
import socket from '../../socket';
const KycStatus = () => {
  const [step, setStep] = useState(null);
  const dispatch = useDispatch();
  const state = useSelector(state => state.common);
  let {
    kycStep, check
  } = { ...state };
  // cases for step and pages
  // null : status  // kyccompleted or not
  // 0 : lets verify // accept terms
  // 1 : kycstepone //doc upload
  // 2 : kycsteptwo //pic click intro
  // 3 : kycstepthree //pic click 
  const _handleNextButton = (num) => {
    if (sessionStorage.getItem('kycid')) {
      setStep(kycStep);
    }
    else
      setStep(num);
  };
  const handleNextButton = (num) => {
    if (num != 4)
      setStep(num);
    else
      setStep(null);
  };
  useEffect(() => {

    if (sessionStorage.getItem('kycid') && check == 0) {
      dispatch(getKYCStatus(sessionStorage.getItem('kycid')));
    }

  }, [])

  useEffect(() => {
    socket.on('kycStatus', async (data) => {
      sessionStorage.setItem('kycStatus',data);
      dispatch(setKYCStep(data));
    });
  }, []) 
  return (
    <div className={"kyc-body"} 
    style={{ backgroundColor: 
      step == 0 || step == 1 ? null : appConst.primaryBlue
     }}
    >
      {
        sessionStorage.getItem('kycStatus') != 3 && step != null
          ?
          step == 0
            ?
            <LetsVerify
              handleClick={handleNextButton}
            />
            :
            step == 1
              ?
              <KycStepOne
                handleClick={handleNextButton}
              />
              :
              step == 2
                ?
                <KycStepTwo
                  handleClick={handleNextButton}
                />
                :
                <KycStepThree
                  handleClick={handleNextButton}
                />
          :
          <Status
            kycStep={sessionStorage.getItem('kycStatus')}
            step={step}
            handleClick={_handleNextButton}
          />
      }

    </div>
  )
}

export default KycStatus