import './DocType.css'
import { DocUpload } from '..'
import { useDispatch, useSelector } from 'react-redux'
import React, { Fragment, useEffect, useRef, useState } from 'react'
import { RadioButton } from '../../../../elements'
import { appConst, documentTypes } from '../../../../constants/texts'
import { getDocTypes, setImageType, setShowClassName, stopLoading } from '../../../../redux/actions/Actions'

const DocType = (props) => {
  const [showDocUpload, setShowDocUpload] = useState(false);
  const state = useSelector(state => state.common);
  const {
    showClssName, imgType, docTypes
  } = { ...state };

  const dispatch = useDispatch(); 
  let docRef = useRef(null);
  const handleChange = (e) => {
    dispatch(setShowClassName(false));
    dispatch(setImageType(e + 1));
    dispatch(stopLoading());
    setShowDocUpload(e + 1);
    docRef.current = e;
  };
  useEffect(() => {
     dispatch(getDocTypes()); 
  }, [])
  
  return (
    <div className="doc-type">
      {/* title */}
      <h3>
        {appConst.choose_doc}
      </h3>
      {/* radio button */}
      <div>
        {
          docTypes?.map((item, index) => {
            return (
              <RadioButton index={index} id={item?.document_id} checked={imgType ? imgType==index+1 ? true: null : null} title={item?.document_name} handleChange={() => handleChange(index)} />
            )
          })
        }

        {
          showClssName && imgType == null
            ?
            <p
              className='error-text'
            >

              {appConst.select_option}
            </p>
            :
            null
        }

      </div>
      {/* warning */}

      {/* doc upload */}
      {
        showDocUpload
          ?
          <Fragment>
            <DocUpload uploadType={docRef.current} />
          </Fragment>
          :
          null
      }
    </div>
  )
}

export default DocType